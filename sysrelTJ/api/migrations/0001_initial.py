# Generated by Django 4.1.7 on 2023-04-21 04:14

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Calendrier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "nC",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("prenom", models.CharField(max_length=50)),
                ("nom", models.CharField(max_length=50)),
                ("dateNaissance", models.DateField(blank=True, null=True)),
                (
                    "sexe",
                    models.CharField(
                        choices=[("H", "HOMME"), ("F", "FEMME")],
                        default="H",
                        max_length=1,
                    ),
                ),
                ("numeroTel1", models.CharField(max_length=20)),
                ("numeroTel2", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("indAvecCompte", models.BooleanField(default=False)),
                ("dateCreation", models.DateTimeField(auto_now_add=True)),
                ("dateMisAJour", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="DateDim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("semaineDebutDate", models.DateField()),
                ("semaineFinDate", models.DateField()),
                ("jourNumeroSemaine", models.IntegerField()),
                ("jourSemaine", models.CharField(max_length=20)),
                ("moisDebutDate", models.DateField()),
                ("moisFinDate", models.DateField()),
                ("indWeekend", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Disponibilite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("indDisponible", models.BooleanField(default=False)),
                (
                    "calendrier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.calendrier"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Proprietaire",
            fields=[
                (
                    "nC",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("prenom", models.CharField(max_length=50)),
                ("nom", models.CharField(max_length=50)),
                ("dateNaissance", models.DateField()),
                (
                    "sexe",
                    models.CharField(
                        choices=[("H", "HOMME"), ("F", "FEMME")],
                        default="H",
                        max_length=1,
                    ),
                ),
                ("adresseDom", models.CharField(max_length=50)),
                ("ville", models.CharField(default="Bamako", max_length=50)),
                ("quartier", models.CharField(default="Faladie", max_length=50)),
                ("commune", models.IntegerField(blank=True, default=6, null=True)),
                ("numeroTel1", models.CharField(max_length=20)),
                ("numeroTel2", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(max_length=254)),
                ("profession", models.CharField(max_length=50)),
                ("indCompteValide", models.BooleanField(default=False)),
                ("dateCreation", models.DateTimeField(auto_now_add=True)),
                ("dateMisAJour", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="trancheHoraire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("debut", models.TimeField()),
                ("fin", models.TimeField()),
                ("indMatin", models.BooleanField(default=True)),
                ("indApresMidi", models.BooleanField(default=False)),
                ("indSoiree", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Terrain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=50)),
                ("adresse", models.CharField(max_length=50)),
                ("ville", models.CharField(default="Bamako", max_length=50)),
                ("quartier", models.CharField(default="Faladie", max_length=50)),
                ("commune", models.IntegerField(blank=True, default=6, null=True)),
                ("latitude", models.DecimalField(decimal_places=16, max_digits=22)),
                ("longitude", models.DecimalField(decimal_places=16, max_digits=22)),
                ("largeur", models.FloatField()),
                ("longueur", models.FloatField()),
                ("nombreUnitesMin", models.IntegerField()),
                ("nombreUnitesMax", models.IntegerField()),
                ("prixUnite", models.FloatField()),
                (
                    "methodePaiment1",
                    models.CharField(
                        choices=[("C", "COMPTANT"), ("O", "ORANGE MONEY")],
                        default="C",
                        max_length=1,
                    ),
                ),
                (
                    "methodePaiment2",
                    models.CharField(
                        blank=True,
                        choices=[("C", "COMPTANT"), ("O", "ORANGE MONEY")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("GR", "GRAVIER"),
                            ("GA", "GAZON"),
                            ("SY", "SYNTHETIQUE"),
                            ("SA", "SABLE"),
                        ],
                        default="GR",
                        max_length=2,
                    ),
                ),
                ("indStanding", models.BooleanField(default=False)),
                ("photo1", models.ImageField(upload_to="terrains")),
                (
                    "photo2",
                    models.ImageField(blank=True, null=True, upload_to="terrains"),
                ),
                (
                    "photo3",
                    models.ImageField(blank=True, null=True, upload_to="terrains"),
                ),
                (
                    "photo4",
                    models.ImageField(blank=True, null=True, upload_to="terrains"),
                ),
                (
                    "photo5",
                    models.ImageField(blank=True, null=True, upload_to="terrains"),
                ),
                ("indTerrainValide", models.BooleanField(default=False)),
                ("dateCreation", models.DateTimeField(auto_now_add=True)),
                ("dateMisAJour", models.DateTimeField(auto_now=True)),
                (
                    "proprietaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.proprietaire",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.client"
                    ),
                ),
                (
                    "disponibilite",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.disponibilite",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="disponibilite",
            name="terrain",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.terrain"
            ),
        ),
        migrations.AddField(
            model_name="calendrier",
            name="date",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.datedim"
            ),
        ),
        migrations.AddField(
            model_name="calendrier",
            name="tranche",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.tranchehoraire"
            ),
        ),
    ]
